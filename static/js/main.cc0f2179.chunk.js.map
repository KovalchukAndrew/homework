{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","pic/retrowave-sunset-with-palm-silhouette-and-flying-birds-in-the-foreground-summer-time-themed-synthwave-styled-illustration_148087-215.jpg","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","src","pic","alt","avatar","angle","content","name","textMessage","time","messageData","HW1","Affair","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","errorInput","value","onChange","disabled","button","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","trim","alert","HW3","setUsers","user","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","superInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","HW4","text","setText","showAlert","checked","setChecked","column","blue","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.cc0f2179.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3nB0p\",\"avatar\":\"Message_avatar__3Oy27\",\"angle\":\"Message_angle__Nix_M\",\"content\":\"Message_content__oITB7\",\"name\":\"Message_name__3OGf1\",\"textMessage\":\"Message_textMessage__36dYC\",\"time\":\"Message_time__3OdmB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__27Uui\",\"errorInput\":\"SuperInputText_errorInput__2GwbQ\",\"error\":\"SuperInputText_error__2vibO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2bcgE\",\"red\":\"SuperButton_red__Um_n9\",\"disabled\":\"SuperButton_disabled__1rA6m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__1g857\",\"error\":\"Greeting_error__366p2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3zc2O\",\"column\":\"HW4_column__1qC34\",\"testSpanError\":\"HW4_testSpanError__1WcZe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__21Xcr\",\"spanClassName\":\"SuperCheckbox_spanClassName__2-gLn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1HKtA\"};","export default __webpack_public_path__ + \"static/media/retrowave-sunset-with-palm-silhouette-and-flying-birds-in-the-foreground-summer-time-themed-synthwave-styled-illustration_148087-215.1c14277a.jpg\";","import React from 'react'\nimport s from './Message.module.css'\nimport pic from './../../pic/retrowave-sunset-with-palm-silhouette-and-flying-birds-in-the-foreground-summer-time-themed-synthwave-styled-illustration_148087-215.jpg'\n\nexport type MessageType = {\n    /*avatar: string,*/\n    name: string,\n    message: string,\n    time: string,\n}\n\nfunction Message(props: MessageType) {\n    return (\n        <div className={s.message}>\n            <img src={pic} alt={'avatar'} className={s.avatar}/>\n            <div className={s.angle}/>\n\n                <div className={s.content}>\n                    <div className={s.name}>{props.name}</div>\n                    <div className={s.textMessage}>{props.message}</div>\n                    <div className={s.time}>{props.time}</div>\n                </div>\n\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from './Message'\n\nconst messageData = {\n    /*avatar: 'https://lh3.googleusercontent.com/proxy/0t6YAfILvzx8s-7NjWfsc9BgCnuFbh49GdW_lEIV2pfm1kY0-g2PmO3YMLY2xOJxxudzxtqEXHobyC7tQUw9DMv0aprKDZRiS5PGJ4XSc-MBKeaUnLF8jejMyr5ztGUVDA',*/\n    name: 'Some Name',\n    message: 'my message',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                /*avatar={messageData.avatar}*/\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (affairID: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => props.deleteAffairCallback(props.affair._id)// need to fix\n\n    return (\n        <div>\n            {props.affair.name + \" \" + props.affair.priority}\n\n\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (value: 'all'| 'high' | 'middle' | 'low') => void\n    deleteAffairCallback: (id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter(\"all\")} // need to fix\n    const setHigh = () => {props.setFilter(\"high\")}\n    const setMiddle = () => {props.setFilter(\"middle\")}\n    const setLow = () => {props.setFilter(\"low\")}\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'middle' | 'low'\nexport type AffairType = {\n    _id: number, name: string, priority: AffairPriorityType ,\n}\n/*export type filterAffairs: (affairs: Array<AffairType>, filter: FilterType) =>  void*/\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'all') return affairs\n    /*else if (filter === 'low') return affairs.filter((a) => a.priority === 'low')\n    else if (filter === 'middle') return affairs.filter((a) => a.priority === 'middle')*/\n    else return affairs.filter((a) => a.priority === filter)\n\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): any => { // need to fix any\n    return affairs.filter((a) => a._id !== _id)}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error? s.errorInput: s.error // need to fix with (?:)\n\n    return (\n        <div>\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\n            <button onClick={addUser} disabled={!name} className={s.button}>add</button>\n            <span>{totalUsers}</span>\n            <div><span>{error}</span></div>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {// need to fix any\n        const a = e.currentTarget.value.trim()\n        if (a) {\n            setName(a)\n            setError(\"\")\n        } else {\n            setError('uncorrected')\n            setName('')\n\n\n        }\n        }\n         // need to fix\n\n    const addUser = () => {\n        addUserCallback(name)\n        alert(`Hello ${name} !`)\n        setName('')\n\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => {\n        const user = {\n            _id: v1(),\n            name,\n        }\n        setUsers([user, ...users]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className, disabled,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${disabled ? s.disabled : s.default} ${red ? s.red : s.default}  ${className} `\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(true)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton >\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\n\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW5/>*/}\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}